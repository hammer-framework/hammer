diff --git a/build/index.d.ts b/build/index.d.ts
index 5bdf9fdf30fd0f28a1760ac41404238b61b20b94..16d4b389e854564e2cfeda687371c77965b01323 100644
--- a/build/index.d.ts
+++ b/build/index.d.ts
@@ -4,6 +4,8 @@
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
+/// <reference types="node" />
+
 import {CallerTransformOptions} from '@jest/transform';
 import type {Config} from '@jest/types';
 import type {expect} from '@jest/globals';
@@ -17,6 +19,7 @@ import {shouldInstrument} from '@jest/transform';
 import {ShouldInstrumentOptions} from '@jest/transform';
 import type {SourceMapRegistry} from '@jest/source-map';
 import type {TestContext} from '@jest/test-result';
+import {URL as URL_2} from 'url';
 import type {V8CoverageResult} from '@jest/test-result';
 
 declare type HasteMapOptions = {
@@ -128,13 +131,13 @@ declare class Runtime {
   private getExportsOfCjs;
   requireModule<T = unknown>(
     from: string,
-    moduleName?: string,
+    moduleName?: string | URL_2,
     options?: InternalModuleOptions,
     isRequireActual?: boolean,
   ): T;
   requireInternalModule<T = unknown>(from: string, to?: string): T;
-  requireActual<T = unknown>(from: string, moduleName: string): T;
-  requireMock<T = unknown>(from: string, moduleName: string): T;
+  requireActual<T = unknown>(from: string, moduleName: string | URL_2): T;
+  requireMock<T = unknown>(from: string, moduleName: string | URL_2): T;
   private _loadModule;
   private _getFullTransformationOptions;
   requireModuleOrMock<T = unknown>(from: string, moduleName: string): T;
@@ -148,7 +151,7 @@ declare class Runtime {
   getSourceMaps(): SourceMapRegistry;
   setMock(
     from: string,
-    moduleName: string,
+    moduleName: string | URL_2,
     mockFactory: () => unknown,
     options?: {
       virtual?: boolean;
diff --git a/build/index.js b/build/index.js
index 01cb4206525dab0e564e07366bb0de1cc68ae2d1..43bdf7c6685329618028b479fce1cc81a73943b8 100644
--- a/build/index.js
+++ b/build/index.js
@@ -1530,6 +1530,9 @@ class Runtime {
     }
   }
   _requireCoreModule(moduleName, supportPrefix) {
+    if (typeof moduleName !== 'string') {
+      moduleName = moduleName.href;
+    }
     const moduleWithoutNodePrefix =
       supportPrefix && moduleName.startsWith('node:')
         ? moduleName.slice('node:'.length)
