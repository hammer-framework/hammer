name: Publish release candidate

on:
  push:
    branches: ['release/**']
    tags-ignore:
      - v** # We don't want this to run on release
    paths-ignore:
      - 'docs/**' # No need to run on docs-only changes

jobs:
  git-tag-check:
    if: github.repository == 'redwoodjs/redwood'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required because lerna uses tags to determine the version.

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: 🏷 Check tags
        run: |
          CURRENT_TAG=$(git describe --abbrev=0)

          # `github.ref_name` is something like `release/minor/v1.1.0`.
          # `basename` gets us `v1.1.0`, then parameter expansion strips the `v`.
          # See https://stackoverflow.com/questions/6594085/remove-first-character-of-a-string-in-bash.
          BRANCH_TAG=$(basename ${{ github.ref_name }})
          BRANCH_TAG=${BRANCH_TAG:1}

          echo
          echo "Current tag is $CURRENT_TAG"
          echo "Branch tag is $BRANCH_TAG"
          echo "Comparing tags with \"yarn dlx semver-compare-cli $CURRENT_TAG lt $BRANCH_TAG\""
          echo

          # See if the current tag is less than the branch's tag.
          # If it is, we're good to keep going.
          yarn dlx semver-compare-cli $CURRENT_TAG lt $BRANCH_TAG

  publish-release-candidate:
    name: 🚢 Publish Release Candidate
    needs: check-tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # `fetch-depth`—number of commits to fetch. `0` fetches all history for all branches and tags.
          #  This is required because lerna uses tags to determine the version.
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Print node and yarn versions
        run: |
          node --version
          yarn --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-1234-${{ hashFiles('yarn.lock') }} #change yarn-{randomString} to bust the cache
          restore-keys: |
            yarn-1234

      - name: Install dependencies
        run: yarn install --immutable

      - name: 'Check Yarn constraints (fix w/ "yarn constraints --fix")'
        run: yarn constraints

      - name: 'Check for duplicate dependencies (fix w/ "yarn dedupe")'
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn dedupe --check

      - name: 🏗 Build
        run: yarn build

      - name: 🔎 Lint
        run: yarn lint
        env:
          CI: true

      - name: 🧪 Test
        run: yarn test
        env:
          CI: true

      - name: 🚢 Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
          SEMVER=$(basename $(dirname ${{ github.ref_name }}))
          yarn lerna publish pre$SEMVER --include-merged-tags --canary --preid rc --dist-tag rc --force-publish --loglevel verbose --yes
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
