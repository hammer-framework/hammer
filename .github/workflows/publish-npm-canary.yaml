name: Publish canary packages

on:
  push:
    branches: [main]
    tags-ignore:
      - v** # We don't want this to run on release
    paths-ignore:
      - 'docs/**'

jobs:
  publish-canary:
    if: github.repository == 'redwoodjs/redwood'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required because lerna uses tags to determine the version.

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Print node and yarn versions
        run: |
          node --version
          yarn --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-1234-${{ hashFiles('yarn.lock') }} #change yarn-{randomString} to bust the cache
          restore-keys: |
            yarn-1234

      - name: Install dependencies
        run: yarn install --immutable

      - name: 'Check Yarn constraints (fix w/ "yarn constraints --fix")'
        run: yarn constraints

      - name: 'Check for duplicate dependencies (fix w/ "yarn dedupe")'
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn dedupe --check

      - name: Build
        run: yarn build

      - name: Run ESLint
        run: yarn lint
        env:
          CI: true

      - name: Run tests
        run: yarn test
        env:
          CI: true

      - name: Publish to npm
        run: |
          git describe
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
          yarn publish:canary
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Update Publish Job Status
        if: always()
        run: |
          echo ${{ job.status }} > status_publish.txt

      - name: Upload file status_publish.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pass_status_publish_job
          path: status_publish.txt

# Slack Notifications for publish success/fail
# https://github.com/marketplace/actions/slack-send
  slack-notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: publish-canary
    if: always()

    steps:
      - name: Download publish status artifact
        uses: actions/download-artifact@v3
        with:
          name: pass_status_publish_job

      - name: Set the publish status as output
        id: publish-status
        run: |
          echo "::set-output name=publish-result::$(<status_publish.txt)"

      - name: Overwrite publish status env if failure
        if: ${{ steps.publish-status.outputs.publish-result == 'failure' }}
        run: |
          echo "PUBLISH_STATUS=Canary Publishing FAILED 🚨" >> $GITHUB_ENV

      - name: Overwrite publish status env if success
        if: ${{ steps.publish-status.outputs.publish-result == 'success' }}
        run: |
          echo "PUBLISH_STATUS=Canary Publishing SUCCESS ✅" >> $GITHUB_ENV

      - name: Overwrite publish status env if something else
        if: ${{ (steps.publish-status.outputs.publish-result != 'failure') &&  (steps.publish-status.outputs.publish-result != 'success') }}
        run: |
          echo "PUBLISH_STATUS=Canary Publishing Cancelled ⏹" >> $GITHUB_ENV

      - name: Slack
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "publish_label": "Canary Packages 🦜",
              "publish_status": "${{ env.PUBLISH_STATUS }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PACKAGE_PUBLISHING }}
