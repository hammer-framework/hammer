import { useMutation } from '@redwoodjs/web'
import { navigate, routes } from '@redwoodjs/router'
import ${singularPascalName}Form from 'src/components/${singularPascalName}Form'

export const QUERY = gql`
  query FIND_POST_BY_ID($id: ${idType}!) {
    ${singularCamelName}: ${singularCamelName}(id: $id) {<% columns.forEach(column => { %>
      <%= column.name %><% }) %>
    }
  }
`
const UPDATE_POST_MUTATION = gql`
  mutation Update${singularPascalName}Mutation($id: ${idType}!, $input: ${singularPascalName}Input!) {
    update${singularPascalName}(id: $id, input: $input) {
      id
    }
  }
`

export const Loading = () => <div>Loading...</div>

export const Success = ({ ${singularCamelName} }) => {
  const [update${singularPascalName}, { loading, error }] = useMutation(UPDATE_POST_MUTATION, {
    onCompleted: () => {
      navigate(routes.${pluralCamelName}())
    },
  })

  const onSave = (input, id) => {
    update${singularPascalName}({ variables: { id, input } })
  }

  return (
    <div className="bg-white border rounded-lg overflow-hidden">
      <header className="bg-gray-300 text-gray-700 py-3 px-4">
        <h2 className="text-sm font-semibold">Edit ${singularPascalName} {${singularCamelName}.id}</h2>
      </header>
      <div className="bg-gray-100 p-4">
        <${singularPascalName}Form ${singularCamelName}={${singularCamelName}} onSave={onSave} error={error} loading={loading} />
      </div>
    </div>
  )
}
