/**
 * Imported by Apollo Client to configure the cache with any possible types needed for
 * union and interface types.
 *
 * If there is a possibleTypes file generated by GraphQL Code Generator in the project, then use that
 *
 * If not, then use the default possibleTypes file that is created by the configure-graphql-fragments vite plugin
 *
 * This ensures that the required possibleTypes are always available to Apollo Client and the try/catch won't fail
 *
 */
interface PossibleTypesResultData {
  possibleTypes: {
    [key: string]: string[]
  }
}

let file: PossibleTypesResultData = { possibleTypes: {} }

// TODO: Since the vite plugin ensures that the possibleTypes file exists, we can remove this check?
if (process.env.NODE_ENV === 'development') {
  try {
    file = require('web/src/graphql/possibleTypes').default
  } catch (e) {
    // eat the error
  }
}

const result: PossibleTypesResultData = {
  possibleTypes: file.possibleTypes,
}

export default result
