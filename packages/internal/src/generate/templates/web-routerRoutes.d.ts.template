import { RouteParams, QueryParams } from '@redwoodjs/router'

declare module '@redwoodjs/router' {
  // Only "<Route />" components with a "name" and "path" prop will be populated here.
  interface AvailableRoutes {
${routes.map(
  ({ props: { name, path }}) => {
    const paramPascalName = name.charAt(0).toUpperCase() + name.slice(1) + 'Params'

    return `    ${name}: (params?: ${paramPascalName} & QueryParams) => "${path}"`
  }
).join('\n')}
  }

  export function useRoutePaths(): Record<keyof AvailableRoutes, string>
  export function useRoutePath(routeName: keyof AvailableRoutes): string
}

${params.map(p => `export type ${p.name} = {${p.params.length ? "\n" :""}${p.params.map(([key, type]) =>`  ${key}: ${type}` ).join("\n")}${p.params.length ? "\n" :""}}`).join('\n\n')}

//# sourceMappingURL=web-routerRoutes.d.ts.map
