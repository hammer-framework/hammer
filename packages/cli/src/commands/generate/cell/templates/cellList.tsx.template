import type { ${operationName} } from 'types/graphql'
import type { CellSuccessProps, CellFailureProps } from '@redwoodjs/web'

<% if (emptyStateComponentExists) { %>
import EmptyState from 'src/components/CellStates/EmptyState'
<% } %>
<% if (failureStateComponentExists) { %>
import FailureState from 'src/components/CellStates/FailureState'
<% } %>
<% if (loadingStateComponentExists) { %>
import LoadingState from 'src/components/CellStates/LoadingState'
<% } %>

export const QUERY = gql`
  query ${operationName} {
    ${camelName} {
      id
    }
  }
`
<% if (emptyStateComponentExists) { %>
export const Loading = () => <LoadingState />
<% } %>
<% if (failureStateComponentExists) { %>
export const Empty = () => <EmptyState />
<% } %>

export const Failure = ({ error }: CellFailureProps) => (
  <FailureState error={error} />
)

export const Success = ({ ${camelName} }: CellSuccessProps<${operationName}>) => {
  return (
    <ul>
      {${camelName}.map((item) => {
        return <li key={item.id}>{JSON.stringify(item)}</li>
      })}
    </ul>
  )
}
