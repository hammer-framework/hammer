import { mockRedwoodDirective, getDirectiveName } from '@redwoodjs/testing/api'

import  { schema, ${camelName} } from './${camelName}.directive'

describe('${camelName} directive', () => {
  it('declares the directive sdl as schema, with the correct name', () => {
    expect(schema).toBeTruthy()
    expect(getDirectiveName(schema)).toBe('${camelName}')
  })

  it('has a ${camelName} implementation transforms the value', () => {
    const mockExecution = mockRedwoodDirective(${camelName}, {
      mockedResolvedValue: 'foo',
    })

    expect(mockExecution()).toBe('bar')
  })
  })
})
